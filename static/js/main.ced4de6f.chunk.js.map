{"version":3,"sources":["logo.svg","App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","props","handleBtnClick","alert","state","fullname","age","handleChange","event","name","target","value","newState","setState","className","src","logo","alt","this","placeholder","onChange","type","onClick","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAAe,MAA0B,iC,eCwI1BA,E,kDA7Hb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAORC,eAAiB,WACfC,MAAM,GAAD,OAAI,EAAKC,MAAMC,SAAf,YAA2B,EAAKD,MAAME,OAT1B,EAYnBC,aAAe,SAACC,GAAgD,IACvDC,EAAQD,EAAME,OAAdD,KACAE,EAASH,EAAME,OAAfC,MAEDC,EAAQ,eAAO,EAAKR,OAC1BQ,EAASH,GAAQE,EAEjB,EAAKE,SAASD,IAjBd,EAAKR,MAAQ,CACXC,SAAU,GACVC,IAAK,IAJU,E,0CAsBnB,WACE,OACE,qBAAKQ,UAAY,MAAjB,SACE,yBAAQA,UAAY,aAApB,UACE,qBAAKC,IAAKC,EAAMF,UAAY,WAAWG,IAAK,SAC5C,iCACE,uBAAOR,KAAM,WAAWE,MAAOO,KAAKd,MAAMC,SAAUc,YAAY,qBAAqBC,SAAUF,KAAKX,eACpG,uBACA,uBAAOE,KAAK,MAAME,MAAOO,KAAKd,MAAME,IAAKa,YAAY,gBAAgBC,SAAUF,KAAKX,eACpF,uBACA,wBAAQc,KAAK,SAASC,QAASJ,KAAKhB,eAApC,8B,GAjCMqB,IAAMC,WCITC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SA4B1Bb,M","file":"static/js/main.ced4de6f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\n//week 8\ninterface IAppState {\n  fullname: string;\n  age: string;\n}\n\nclass App extends React.Component<{}, IAppState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fullname: '',\n      age: '',\n    }\n  }\n\n  handleBtnClick = () => {\n    alert(`${this.state.fullname} ${this.state.age}`)\n  }\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const {name} = event.target;\n    const {value} = event.target;\n\n    const newState = {...this.state};\n    newState[name] = value;\n\n    this.setState(newState);\n  }\n\n  public render() {\n    return (\n      <div className = \"App\">\n        <header className = \"App-header\">\n          <img src={logo} className = \"App-logo\" alt= \"logo\" />\n          <form>\n            <input name= \"fullname\" value={this.state.fullname} placeholder=\"type fullname here\" onChange={this.handleChange} />\n            <br/>\n            <input name=\"age\" value={this.state.age} placeholder=\"type age here\" onChange={this.handleChange} />\n            <br/>\n            <button type=\"button\" onClick={this.handleBtnClick}>SAVE</button>\n          </form>\n        </header>\n      </div>\n    )\n  }\n}\n\n//week 7\n\n// interface IData {\n//   id: string;\n//   name: string;\n//   email: string;\n// }\n\n// interface IAppState {\n//   showTable: boolean;\n// }\n\n// interface IAppProps {\n//   data: IData[]\n// }\n\n// class App extends React.Component<IAppProps, IAppState>{\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       showTable: true,\n//     }\n//   }\n\n//   componentDidMount() {\n//     alert(\"did mount App component !\")\n//   }\n\n//   componentWillUnmount() {\n//     alert(\"unmounting App component !\")\n//   }\n\n//   componentDidUpdate(){\n//     alert(\"did update called !\")\n//   }\n\n//   public toggleShowTable = () => {\n//     const {showTable} = this.state;\n//     this.setState({showTable: !showTable});\n//   };\n\n//   public renderRow = () => {\n//     return this.props.data.map((item) => {\n//       return (\n//         <tr>\n//           <td>{item.id}</td>\n//           <td>{item.name}</td>\n//           <td>{item.email}</td>\n//         </tr>\n//       )\n//     })\n//   }\n\n//   public renderTable = () => {\n//     if (this.state.showTable) {\n//       return (\n//         <table className = \"table\">\n//           <thead>\n//             <tr>\n//               <td>id</td>\n//               <td>name</td>\n//               <td>email</td>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {this.renderRow()}\n//           </tbody>\n//         </table>\n//       )\n//     }\n//   }\n\n//   public render() {\n//     return (\n//       <div className=\"App\">\n//         <header className=\"App-header\">\n//           <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//           {this.renderTable()}\n//           <button onClick={this.toggleShowTable}>test</button>\n//         </header>\n//       </div>\n//     );\n//   };\n// };\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// week 8\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// week 7\n\n// const dataDummy = [\n//   {\n//     id: \"1\",\n//     name: \"John\",\n//     email: \"john@gmail.com\"\n//   },\n//   {\n//     id: \"1\",\n//     name: \"Frau\",\n//     email: \"frau@gmail.com\"\n//   },\n// ]\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App data={dataDummy} />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}