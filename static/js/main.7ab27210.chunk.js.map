{"version":3,"sources":["logo.svg","App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","props","toggleShowTable","showTable","state","setState","renderRow","data","map","item","id","name","email","renderTable","className","style","border","alert","src","logo","alt","this","onClick","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPAAe,MAA0B,iC,eCuF1BA,E,kDApEb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAkBDC,gBAAkB,WAAO,IACvBC,EAAa,EAAKC,MAAlBD,UACP,EAAKE,SAAS,CAACF,WAAYA,KArBV,EAwBZG,UAAY,WACjB,OAAO,EAAKL,MAAMM,KAAKC,KAAI,SAACC,GAC1B,OACE,+BACE,6BAAKA,EAAKC,KACV,6BAAKD,EAAKE,OACV,6BAAKF,EAAKG,eA9BC,EAoCZC,YAAc,WACnB,GAAI,EAAKT,MAAMD,UACb,OACE,wBAAOW,UAAY,QAAQC,MAAO,CAACC,OAAQ,aAA3C,UACE,gCACE,+BACE,oCACA,sCACA,4CAGJ,gCACG,EAAKV,kBA9Cd,EAAKF,MAAQ,CACXD,WAAW,GAHI,E,qDAOnB,WACEc,MAAM,+B,kCAGR,WACEA,MAAM,gC,gCAGR,WACEA,MAAM,yB,oBAuCR,WACE,OACE,qBAAKH,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKI,IAAKC,EAAML,UAAU,WAAWM,IAAI,SACxCC,KAAKR,cACN,wBAAQS,QAASD,KAAKnB,gBAAtB,2B,GA9DQqB,IAAMC,WCJTC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCUdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,CAAK7B,KAfS,CAChB,CACEG,GAAI,IACJC,KAAM,OACNC,MAAO,kBAET,CACEF,GAAI,IACJC,KAAM,OACNC,MAAO,uBAQTyB,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7ab27210.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\ninterface IData {\n  id: string;\n  name: string;\n  email: string;\n}\n\ninterface IAppState {\n  showTable: boolean;\n}\n\ninterface IAppProps {\n  data: IData[]\n}\n\nclass App extends React.Component<IAppProps, IAppState>{\n  constructor(props) {\n    super(props);\n    this.state = {\n      showTable: true,\n    }\n  }\n\n  componentDidMount() {\n    alert(\"did mount App component !\")\n  }\n\n  componentWillUnmount() {\n    alert(\"unmounting App component !\")\n  }\n\n  componentDidUpdate(){\n    alert(\"did update called !\")\n  }\n\n  public toggleShowTable = () => {\n    const {showTable} = this.state;\n    this.setState({showTable: !showTable});\n  };\n\n  public renderRow = () => {\n    return this.props.data.map((item) => {\n      return (\n        <tr>\n          <td>{item.id}</td>\n          <td>{item.name}</td>\n          <td>{item.email}</td>\n        </tr>\n      )\n    })\n  }\n\n  public renderTable = () => {\n    if (this.state.showTable) {\n      return (\n        <table className = \"table\" style={{border: '1px solid'}}>\n          <thead>\n            <tr>\n              <td>id</td>\n              <td>name</td>\n              <td>email</td>\n            </tr>\n          </thead>\n          <tbody>\n            {this.renderRow()}\n          </tbody>\n        </table>\n      )\n    }\n  }\n\n  public render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          {this.renderTable()}\n          <button onClick={this.toggleShowTable}>test</button>\n        </header>\n      </div>\n    );\n  };\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst dataDummy = [\n  {\n    id: \"1\",\n    name: \"John\",\n    email: \"john@gmail.com\"\n  },\n  {\n    id: \"1\",\n    name: \"Frau\",\n    email: \"frau@gmail.com\"\n  },\n]\n\nReactDOM.render(\n  <React.StrictMode>\n    <App data={dataDummy} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}